package com.gwh.operator;

/**
 * * 按位与运算符的使用
 * *
 * * @author tony 18601767221@163.com
 * * @version 2021/3/15 21:43
 * * @since JDK11
 */
public class BitAndOperator {



    public static void main(String[] args) {
        // 按位与计算规则 按位与(&):  &左右两边的 二进制补码都为1，运算结果为1，否则就为0

        /*
            按位与的计算过程
            255 默认是四个字节的内存， 在内存中的二进制补码表示为 0000 0000 0000 0000 0000 0000 1111 1111
            15  默认是四个字节的内存，在内存中的二进制补码表示为   0000 0000 0000 0000 0000 0000 0000 1111
            0000 0000 0000 0000 0000 0000 1111 1111 &
            0000 0000 0000 0000 0000 0000 0000 1111 =
            0000 0000 0000 0000 0000 0000 0000 1111  转换成十进制的原码输出的结果是15
         */


        //  255 & 15  =15
        System.out.println(" 255 & 15 = "+(255 & 15));
    }
}
